"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[1306],{6067:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var s=n(3117),a=(n(7294),n(3905));const i={title:"Review Workflows",slug:"/settings/review-workflows",description:"Guide for review workflows in settings.",tags:["settings","review-workflows"]},o=void 0,r={unversionedId:"docs/core/admin/settings/review-workflows",id:"docs/core/admin/settings/review-workflows",title:"Review Workflows",description:"Guide for review workflows in settings.",source:"@site/docs/docs/01-core/admin/03-settings/01-review-workflows.mdx",sourceDirName:"docs/01-core/admin/03-settings",slug:"/settings/review-workflows",permalink:"/settings/review-workflows",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/admin/03-settings/01-review-workflows.mdx",tags:[{label:"settings",permalink:"/tags/settings"},{label:"review-workflows",permalink:"/tags/review-workflows"}],version:"current",sidebarPosition:1,frontMatter:{title:"Review Workflows",slug:"/settings/review-workflows",description:"Guide for review workflows in settings.",tags:["settings","review-workflows"]},sidebar:"docs",previous:{title:"Introduction",permalink:"/settings/intro"},next:{title:"useAdminUsers",permalink:"/docs/core/admin/hooks/use-admin-users"}},l={},d=[{value:"Summary",id:"summary",level:2},{value:"License limits",id:"license-limits",level:3},{value:"List view",id:"list-view",level:3},{value:"License limits",id:"license-limits-1",level:4},{value:"Edit &amp; Create views",id:"edit--create-views",level:3},{value:"Form submission",id:"form-submission",level:4},{value:"Edit view",id:"edit-view",level:3},{value:"Deletion of a stage",id:"deletion-of-a-stage",level:4},{value:"Create view",id:"create-view",level:4},{value:"Hooks",id:"hooks",level:3},{value:"<code>useReviewWorkflows(queryParams)</code>",id:"usereviewworkflowsqueryparams",level:4},{value:"Data shapes",id:"data-shapes",level:3},{value:"Endpoints",id:"endpoints",level:3}],c={toc:d};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,s.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"summary"},"Summary"),(0,a.kt)("p",null,"There are 3 views available to manage workflows and stages: List, Edit and Create. These pages are only ",(0,a.kt)("strong",{parentName:"p"},"accessible in enterprise mode")," and\nif the user has the permission ",(0,a.kt)("inlineCode",{parentName:"p"},"admin::review-workflows.read"),"."),(0,a.kt)("p",null,"Upon mount the settings pages injects themselves into the global redux store under the namespace ",(0,a.kt)("inlineCode",{parentName:"p"},"settings_review-workflows"),". Redux is\nthen used for all state management updates. ",(0,a.kt)("inlineCode",{parentName:"p"},"Formik")," is used to render and validate the edit and create views. It\nis integrated with redux, so that all input components are controlled components."),(0,a.kt)("h3",{id:"license-limits"},"License limits"),(0,a.kt)("p",null,"Most licenses have feature-based usage limits configured through Chargebee. These limits are exposed to the frontend through ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/admin/ee/hooks/use-license-limits"},(0,a.kt)("inlineCode",{parentName:"a"},"useLicenseLimits")),".\nOffline licenses do not have these limits and therefore the endpoint does not return any. For offline licenses hard-coded limits apply: max. 200 workflows, max. 200 stages per workflow."),(0,a.kt)("p",null,"The frontend aswell as the admin API restrict actions on the settings pages in various ways (more below), if the license limits are about to exceed or already exceeded."),(0,a.kt)("h3",{id:"list-view"},"List view"),(0,a.kt)("p",null,"The list-view displays all available workflows."),(0,a.kt)("h4",{id:"license-limits-1"},"License limits"),(0,a.kt)("p",null,"Displays a modal in case the user is at or above the license limit on page load. In case a user attempts to create a new workflow the same modal is shown again, in case that creation\nwould exceed the limit."),(0,a.kt)("h3",{id:"edit--create-views"},"Edit & Create views"),(0,a.kt)("p",null,"The edit and create views allow workflows and stages to be edited (existing ones) and new workflows to be created. To enable a review-workflow on a content-type users select\nfrom a list of all content-types (collections aswell as single-types) for each workflow. In case a content-type is already assigned to another content-type, the content-type\nwill be re-assigned to the new workflow."),(0,a.kt)("p",null,"Stages always have a color assigned to them. Colors are stored as hex-codes in the database, to avoid coupling with the design-system and developers to know about possible color-names. The\nadmin app renders the color badges for a stage based in the matching theme-color and in case it doesn't find any the stored hex-code. It was not possible to normalize the hex-codes\nto be uppercase everywhere (e.g. if they are created via lifecycle methods), so the frontend does the normalization."),(0,a.kt)("h4",{id:"form-submission"},"Form submission"),(0,a.kt)("p",null,"The form wrapping boths views submits all stages at once, because we expect the number of stages per workflow to be\nrather small. Because of this we can simply re-order stages by sending them in a different order. Every stage that sends a corresponding ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),"\nattribute will be re-ordered and not created."),(0,a.kt)("p",null,"Stages without an ",(0,a.kt)("inlineCode",{parentName:"p"},"id")," property will be created in the database on submission. Stages that existed already, but are not submitted again will be deleted on submission."),(0,a.kt)("h3",{id:"edit-view"},"Edit view"),(0,a.kt)("p",null,"Displays a license-limits modal in case the user is above the license limit on page load and upon form submission."),(0,a.kt)("h4",{id:"deletion-of-a-stage"},"Deletion of a stage"),(0,a.kt)("p",null,"If a stage is deleted, all ",(0,a.kt)("strong",{parentName:"p"},"entities which are connected to that stage are moved to the previous stage"),". Because a stage deletion\nmight have big effects on the database, a confirmation is shown before users save changes."),(0,a.kt)("p",null,'Changes are only applied once the user clicks "Save". It is not possible to remove all stages from a workflow (neither in the UI nor the API).'),(0,a.kt)("h4",{id:"create-view"},"Create view"),(0,a.kt)("p",null,"Displays a license-limit modal in case the user is at or above the license limit on page load and upon form submission."),(0,a.kt)("h3",{id:"hooks"},"Hooks"),(0,a.kt)("h4",{id:"usereviewworkflowsqueryparams"},(0,a.kt)("inlineCode",{parentName:"h4"},"useReviewWorkflows(queryParams)")),(0,a.kt)("p",null,"This hook allows to fetch either one (if ",(0,a.kt)("inlineCode",{parentName:"p"},"params")," contains an ",(0,a.kt)("inlineCode",{parentName:"p"},"id"),") or all workflows. By default stages are populated. The\nhooks returns a partial react-query result."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"useReviewWorkflows(queryParams: object): {\n  meta: { workflowCount: int }\n  workflows: Workflow[],\n  isLoading: boolean,\n  status: string,\n  refetch: () => Promise<void>,\n}\n")),(0,a.kt)("h3",{id:"data-shapes"},"Data shapes"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"type Stage {\n    id: number;\n    color: string; // hex code\n    name: string; // max-length: 255 characters\n    createdAt: Date;\n    updatedAt: Date;\n}\n\ntype Workflow {\n    id: number;\n    name: string; // max-length: 255 characters, unique\n    contentTypes: number[];\n    stages: Stage[];\n    createdAt: Date;\n    updatedAt: Date;\n}\n")),(0,a.kt)("h3",{id:"endpoints"},"Endpoints"),(0,a.kt)("p",null,"For a list of all available endpoints please refer to the ",(0,a.kt)("a",{parentName:"p",href:"/docs/core/admin/ee/review-workflows"},"detailed backend design documentation"),"."))}p.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var s=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);t&&(s=s.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,s)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,s,a=function(e,t){if(null==e)return{};var n,s,a={},i=Object.keys(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(s=0;s<i.length;s++)n=i[s],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=s.createContext({}),d=function(e){var t=s.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=d(e.components);return s.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return s.createElement(s.Fragment,{},t)}},u=s.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=r(e,["components","mdxType","originalType","parentName"]),u=d(n),m=a,w=u["".concat(l,".").concat(m)]||u[m]||p[m]||i;return n?s.createElement(w,o(o({ref:t},c),{},{components:n})):s.createElement(w,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var r={};for(var l in t)hasOwnProperty.call(t,l)&&(r[l]=t[l]);r.originalType=e,r.mdxType="string"==typeof e?e:a,o[1]=r;for(var d=2;d<i;d++)o[d]=n[d];return s.createElement.apply(null,o)}return s.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);