"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[5685],{4285:(e,t,n)=>{n.d(t,{Z:()=>a});var r=n(7294);function a(e){let{children:t}=e;return r.createElement("span",{style:{color:"#017501"}},"<",t,">")}},7228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var r=n(3117),a=(n(7294),n(3905)),o=n(4285);const l={title:"Cron Service",slug:"/api/Cron",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:3},i="Cron",s={unversionedId:"api/cron",id:"api/cron",title:"Cron Service",description:"Current state: Stable",source:"@site/docs/api/cron.mdx",sourceDirName:"api",slug:"/api/Cron",permalink:"/api/Cron",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/api/cron.mdx",tags:[{label:"module",permalink:"/tags/module"},{label:"public",permalink:"/tags/public"}],version:"current",frontMatter:{title:"Cron Service",slug:"/api/Cron",tags:["module","public"],toc_min_heading_level:2,toc_max_heading_level:3},sidebar:"api",previous:{title:"Container",permalink:"/api/container"},next:{title:"EventHub (WIP)",permalink:"/api/EventHub"}},c={},p=[{value:"Module: Cron Service",id:"module-cron-service",level:2},{value:"createCronService()",id:"createcronservice",level:3},{value:"Methods",id:"methods",level:2},{value:"<code>cron.add(tasks)</code>",id:"cronaddtasks",level:3},{value:"Example",id:"example",level:4},{value:"<code>cron.remove(name)</code>",id:"cronremovename",level:3},{value:"Example",id:"example-1",level:4},{value:"<code>cron.start()</code>",id:"cronstart",level:3},{value:"Example",id:"example-2",level:4},{value:"<code>cron.stop()</code>",id:"cronstop",level:3},{value:"Example",id:"example-3",level:4},{value:"<code>cron.destroy()</code>",id:"crondestroy",level:3},{value:"Example",id:"example-4",level:4},{value:"Properties",id:"properties",level:2},{value:"<code>cron.jobs</code>",id:"cronjobs",level:3}],u={toc:p};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"cron"},"Cron"),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Current state: ",(0,a.kt)("strong",{parentName:"p"},"Stable"))),(0,a.kt)("p",null,"The Strapi Cron Service provides a way to add, remove, start, and stop cron jobs in a Strapi application."),(0,a.kt)("h2",{id:"module-cron-service"},"Module: Cron Service"),(0,a.kt)("h3",{id:"createcronservice"},"createCronService()"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"createCronService()")," function returns an object that provides methods to manage cron jobs."),(0,a.kt)("h2",{id:"methods"},"Methods"),(0,a.kt)("h3",{id:"cronaddtasks"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.add(tasks)")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"tasks"),": ",(0,a.kt)(o.Z,{mdxType:"Type"},"Object")),(0,a.kt)("li",{parentName:"ul"},"Returns: ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))),(0,a.kt)("p",null,"Adds one or more cron tasks to the service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Each key of the ",(0,a.kt)("inlineCode",{parentName:"li"},"tasks")," object is the name of the task."),(0,a.kt)("li",{parentName:"ul"},"Each value of the ",(0,a.kt)("inlineCode",{parentName:"li"},"tasks")," object can be either a function, or an object with two properties: ",(0,a.kt)("inlineCode",{parentName:"li"},"task")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"options"),"."),(0,a.kt)("li",{parentName:"ul"},"If the value is a function, it is used as the task to be executed when the cron expression is met.",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"The key will be considered as the cron expression"))),(0,a.kt)("li",{parentName:"ul"},"If the value is an object, its ",(0,a.kt)("inlineCode",{parentName:"li"},"task")," property is used as the task function, and its ",(0,a.kt)("inlineCode",{parentName:"li"},"options")," property is used as the cron expression options.")),(0,a.kt)("h4",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n  '*/1 * * * *': () => console.log('A minute has passed.'),\n});\n")),(0,a.kt)("h3",{id:"cronremovename"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.remove(name)")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name"),": ",(0,a.kt)(o.Z,{mdxType:"Type"},"String")),(0,a.kt)("li",{parentName:"ul"},"Returns: ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))),(0,a.kt)("p",null,"Removes a cron task from the service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"The ",(0,a.kt)("inlineCode",{parentName:"li"},"name")," parameter is the name of the task to remove.")),(0,a.kt)("h4",{id:"example-1"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\ncron.remove('myTask');\n")),(0,a.kt)("h3",{id:"cronstart"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.start()")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Returns: ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))),(0,a.kt)("p",null,"Starts the cron service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Schedules all the cron jobs.")),(0,a.kt)("h4",{id:"example-2"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\ncron.start();\n")),(0,a.kt)("h3",{id:"cronstop"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.stop()")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Returns: ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))),(0,a.kt)("p",null,"Stops the cron service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Cancels all the scheduled jobs.")),(0,a.kt)("h4",{id:"example-3"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\n// Start the scheduled cron jobs\ncron.start();\n// Stops the cron jobs\ncron.stop();\n")),(0,a.kt)("h3",{id:"crondestroy"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.destroy()")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Returns: ",(0,a.kt)("inlineCode",{parentName:"li"},"this"))),(0,a.kt)("p",null,"Destroys the cron service."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Calls the ",(0,a.kt)("inlineCode",{parentName:"li"},"stop()")," method."),(0,a.kt)("li",{parentName:"ul"},"Clears the list of cron jobs.")),(0,a.kt)("h4",{id:"example-4"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { createCronService } = require('packages/core/strapi/lib/services/cron.js');\n\nconst cron = createCronService();\n\nconst task = () => {\n  console.log('Task executed!');\n};\n\ncron.add({\n  myTask: {\n    task,\n    options: '*/5 * * * *', // Executes every 5 minutes.\n  },\n});\n\n// Start the scheduled cron jobs\ncron.start();\n// Stops the cron jobs and remove all scheduled tasks\ncron.destroy();\n")),(0,a.kt)("h2",{id:"properties"},"Properties"),(0,a.kt)("h3",{id:"cronjobs"},(0,a.kt)("inlineCode",{parentName:"h3"},"cron.jobs")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Z,{mdxType:"Type"},"Array"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)(o.Z,{mdxType:"Type"},"Object"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"job"),": ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/node-schedule/node-schedule"},(0,a.kt)(o.Z,{mdxType:"Type"},"Job"))," - Job object by node-schedule"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"options"),": ",(0,a.kt)(o.Z,{mdxType:"Type"},"String")," - String representing the recurrence of the job ( like '",(0,a.kt)("em",{parentName:"li"},"/5 ")," * * *' )"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name"),": ",(0,a.kt)(o.Z,{mdxType:"Type"},"String")," - The name of the task associated to the job")))))),(0,a.kt)("p",null,"An array of the cron jobs added to the service."))}d.isMDXComponent=!0},3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,k=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return n?r.createElement(k,l(l({ref:t},p),{},{components:n})):r.createElement(k,l({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"}}]);