"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7258],{5775:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var n=t(3117),o=(t(7294),t(3905));const a={title:"Source",tags:["providers","data-transfer","experimental"]},i="Strapi File Source Provider",s={unversionedId:"docs/core/data-transfer/providers/strapi-file/source",id:"docs/core/data-transfer/providers/strapi-file/source",title:"Source",description:"This provider will open and read a Strapi Data File as a data source.",source:"@site/docs/docs/01-core/data-transfer/02-providers/03-strapi-file/02-source.md",sourceDirName:"docs/01-core/data-transfer/02-providers/03-strapi-file",slug:"/docs/core/data-transfer/providers/strapi-file/source",permalink:"/docs/core/data-transfer/providers/strapi-file/source",draft:!1,editUrl:"https://github.com/strapi/strapi/tree/main/docs/docs/docs/01-core/data-transfer/02-providers/03-strapi-file/02-source.md",tags:[{label:"providers",permalink:"/tags/providers"},{label:"data-transfer",permalink:"/tags/data-transfer"},{label:"experimental",permalink:"/tags/experimental"}],version:"current",sidebarPosition:2,frontMatter:{title:"Source",tags:["providers","data-transfer","experimental"]},sidebar:"docs",previous:{title:"Strapi File Structure",permalink:"/docs/core/data-transfer/providers/strapi-file/file-structure"},next:{title:"Destination",permalink:"/docs/core/data-transfer/providers/strapi-file/destination"}},p={},l=[{value:"Provider Options",id:"provider-options",level:2}],c={toc:l};function d(e){let{components:r,...t}=e;return(0,o.kt)("wrapper",(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"strapi-file-source-provider"},"Strapi File Source Provider"),(0,o.kt)("p",null,"This provider will open and read a Strapi Data File as a data source."),(0,o.kt)("h2",{id:"provider-options"},"Provider Options"),(0,o.kt)("p",null,"The accepted options are defined in ",(0,o.kt)("inlineCode",{parentName:"p"},"ILocalFileSourceProviderOptions"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"  file: {\n    path: string; // the file to load\n  };\n\n  encryption: {\n    enabled: boolean; // if the file is encrypted (and should be decrypted)\n    key?: string; // the key to decrypt the file\n  };\n\n  compression: {\n    enabled: boolean; // if the file is compressed (and should be decompressed)\n  };\n")),(0,o.kt)("p",null,'Note: When the Strapi CLI attempts to import a file, the options for compression and encryption are set based on the extension of the file being loaded, eg a file with the .gz extension will have the "compress" option set, and a file that includes the .enc extension will have the "encrypt" option set.'),(0,o.kt)("p",null,"When using the transfer engine programmatically, you may make the determination whether the file being loaded should be decrypted or compressed by setting\nthose options."))}d.isMDXComponent=!0},3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>f});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var p=n.createContext({}),l=function(e){var r=n.useContext(p),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=l(e.components);return n.createElement(p.Provider,{value:r},e.children)},d={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},u=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=l(t),f=o,m=u["".concat(p,".").concat(f)]||u[f]||d[f]||a;return t?n.createElement(m,i(i({ref:r},c),{},{components:t})):n.createElement(m,i({ref:r},c))}));function f(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=u;var s={};for(var p in r)hasOwnProperty.call(r,p)&&(s[p]=r[p]);s.originalType=e,s.mdxType="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);